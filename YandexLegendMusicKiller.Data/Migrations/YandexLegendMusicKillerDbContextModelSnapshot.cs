// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YandexLegendMusicKiller.Data;

#nullable disable

namespace YandexLegendMusicKiller.Data.Migrations
{
    [DbContext(typeof(YandexLegendMusicKillerDbContext))]
    partial class YandexLegendMusicKillerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MusicCollectionSong", b =>
                {
                    b.Property<Guid>("MusicCollectionsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SongsId")
                        .HasColumnType("uuid");

                    b.HasKey("MusicCollectionsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("MusicCollectionSong");
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("authors_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("albums", (string)null);
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("nick_name");

                    b.HasKey("Id");

                    b.ToTable("authors", (string)null);
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Genre", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Name")
                        .HasName("genres_pkey");

                    b.ToTable("genres", (string)null);
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.MusicCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("music_collections", (string)null);
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uuid")
                        .HasColumnName("albums_id");

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasColumnName("genres_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("songs", (string)null);
                });

            modelBuilder.Entity("MusicCollectionSong", b =>
                {
                    b.HasOne("YandexLegendMusicKiller.Data.Entities.MusicCollection", null)
                        .WithMany()
                        .HasForeignKey("MusicCollectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YandexLegendMusicKiller.Data.Entities.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Album", b =>
                {
                    b.HasOne("YandexLegendMusicKiller.Data.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Song", b =>
                {
                    b.HasOne("YandexLegendMusicKiller.Data.Entities.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YandexLegendMusicKiller.Data.Entities.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("YandexLegendMusicKiller.Data.Entities.Genre", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
